version: '3.8'

services:
  ordering.api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5055:5055"
    environment:
      - ASPNETCORE_URLS=http://+:5055
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=ordering;Username=postgres;Password=postgres123;
      - Kafka__BootstrapServers=redpanda:9092
    depends_on:
      postgres:
        condition: service_healthy
      redpanda:
        condition: service_healthy

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ordering
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.5
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr 0.0.0.0:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
      - --default-log-level=error
    ports:
      - "18081:18081"
      - "18082:18082"
      - "19092:19092"
      - "9644:9644"
    healthcheck:
      test: ["CMD", "rpk", "cluster", "health"]
      interval: 10s
      timeout: 10s
      retries: 5
