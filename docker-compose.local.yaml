version: "3.9"
services:
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.5
    command:
      - redpanda start
      - --overprovisioned
      - --smp=1
      - --memory=1G
      - --reserve-memory=0M
      - --check=false
      - --kafka-addr=PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:19092
      - --advertise-kafka-addr=PLAINTEXT://redpanda:9092,PLAINTEXT_HOST://localhost:19092
    ports:
      - "19092:19092"
      - "9644:9644"
    healthcheck:
      test: ["CMD", "rpk", "cluster", "info", "-X", "brokers=redpanda:9092"]
      interval: 5s
      timeout: 5s
      retries: 20

  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: ordering
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ordering"]
      interval: 5s
      timeout: 5s
      retries: 20

  ordering.api:
    build:
      context: .
      dockerfile: Ordering.Api/Dockerfile
    environment:
      ASPNETCORE_URLS: http://+:5055
      ConnectionStrings__OrderingDb: Host=postgres;Database=ordering;Username=postgres;Password=password
      Kafka__BootstrapServers: redpanda:9092
      Kafka__Topic: ordering-events
    ports:
      - "5055:5055"
    depends_on:
      redpanda:
        condition: service_healthy
      postgres:
        condition: service_healthy
